-- Varis Notification Backend - FULL working version

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local MAX_NOTIFS = 4
local activeNotifs = {}

local function hexToColor3(hex)
    hex = hex:gsub("#", "")
    local r = tonumber(hex:sub(1, 2), 16) or 255
    local g = tonumber(hex:sub(3, 4), 16) or 255
    local b = tonumber(hex:sub(5, 6), 16) or 255
    return Color3.fromRGB(r, g, b)
end

local function createNotification(params)
    local title = params.title or "Notification"
    local subtitle = params.subtitle or ""
    local col = params.col and hexToColor3(params.col) or Color3.fromRGB(41, 128, 185)
    local duration = params.duration or 5
    local font = params.font or Enum.Font.Gotham

    local notifFrame = Instance.new("Frame")
    notifFrame.Size = UDim2.new(0, 300, 0, 80)
    notifFrame.AnchorPoint = Vector2.new(1, 1)
    notifFrame.Position = UDim2.new(1, -20, 1, -20)
    notifFrame.BackgroundColor3 = col
    notifFrame.BorderSizePixel = 0
    notifFrame.Parent = PlayerGui

    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = notifFrame

    -- Title label
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -40, 0, 25)
    titleLabel.Position = UDim2.new(0, 10, 0, 10)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.Font = font
    titleLabel.TextSize = 18
    titleLabel.TextWrapped = true
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.TextYAlignment = Enum.TextYAlignment.Top
    titleLabel.Text = title
    titleLabel.Parent = notifFrame

    -- Subtitle label
    local subtitleLabel = Instance.new("TextLabel")
    subtitleLabel.Size = UDim2.new(1, -40, 0, 40)
    subtitleLabel.Position = UDim2.new(0, 10, 0, 35)
    subtitleLabel.BackgroundTransparency = 1
    subtitleLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
    subtitleLabel.Font = font
    subtitleLabel.TextSize = 14
    subtitleLabel.TextWrapped = true
    subtitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    subtitleLabel.TextYAlignment = Enum.TextYAlignment.Top
    subtitleLabel.Text = subtitle
    subtitleLabel.Parent = notifFrame

    -- Close button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 24, 0, 24)
    closeBtn.Position = UDim2.new(1, -30, 0, 10)
    closeBtn.BackgroundTransparency = 1
    closeBtn.Font = Enum.Font.SourceSansBold
    closeBtn.TextSize = 24
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.Text = "Ã—"
    closeBtn.Parent = notifFrame

    -- Depletion bar background
    local barFrame = Instance.new("Frame")
    barFrame.Size = UDim2.new(1, 0, 0, 4)
    barFrame.Position = UDim2.new(0, 0, 1, -4)
    barFrame.BackgroundColor3 = col:lerp(Color3.new(0, 0, 0), 0.3)
    barFrame.BorderSizePixel = 0
    barFrame.Parent = notifFrame

    -- Depletion bar
    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(1, 0, 1, 0)
    bar.Position = UDim2.new(0, 0, 0, 0)
    bar.BackgroundColor3 = col
    bar.BorderSizePixel = 0
    bar.Parent = barFrame

    -- Tween bar shrinking left to right
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(bar, tweenInfo, {Size = UDim2.new(0, 0, 1, 0)})
    tween:Play()

    local function closeNotification()
        local slideTween = TweenService:Create(notifFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Position = notifFrame.Position + UDim2.new(0, 350, 0, 0)
        })
        slideTween:Play()
        slideTween.Completed:Wait()
        notifFrame:Destroy()

        for i, v in ipairs(activeNotifs) do
            if v == notifFrame then
                table.remove(activeNotifs, i)
                break
            end
        end

        -- Rearrange remaining notifications
        for i, v in ipairs(activeNotifs) do
            local newPos = UDim2.new(1, -20, 1, -20 - (i-1)*90)
            TweenService:Create(v, TweenInfo.new(0.3), {Position = newPos}):Play()
        end
    end

    closeBtn.MouseButton1Click:Connect(closeNotification)

    delay(duration, closeNotification)

    table.insert(activeNotifs, notifFrame)

    -- Arrange notifications stacked upwards
    for i, v in ipairs(activeNotifs) do
        local newPos = UDim2.new(1, -20, 1, -20 - (i-1)*90)
        TweenService:Create(v, TweenInfo.new(0.3), {Position = newPos}):Play()
    end
end

local function rateLimitNotification()
    createNotification({
        title = "Varis Notifications",
        subtitle = "Your notifications are being ratelimited, do not spam notifications!",
        col = "#e74c3c",
        duration = 5,
        font = Enum.Font.GothamBold
    })
end

local v = {}

function v.notify(params)
    if #activeNotifs >= MAX_NOTIFS then
        rateLimitNotification()
        return
    end

    if type(params.font) == "string" then
        local success, fontEnum = pcall(function()
            return Enum.Font[params.font]
        end)
        if success and fontEnum then
            params.font = fontEnum
        else
            params.font = Enum.Font.Gotham
        end
    elseif typeof(params.font) ~= "EnumItem" then
        params.font = Enum.Font.Gotham
    end

    createNotification(params)
end

return v
