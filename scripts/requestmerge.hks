-- requestmerge.hks
-- Backend script for validating key & merge, then fetching the linked script.

-- Utility function to fetch data from URL
local function fetch(url)
    local success, response = pcall(function()
        return game:HttpGet(url)
    end)
    if not success then
        return nil, "Failed to fetch: " .. tostring(response)
    end
    return response
end

-- URLS
local KEY_URL = "https://raw.githubusercontent.com/MrInc0gnito/varis/refs/heads/main/scripts/key.hsk"
local MERGE_LIST_URL = "https://raw.githubusercontent.com/MrInc0gnito/varis/refs/heads/main/scripts/requestsignal.hks"

return function(key, merge)
    -- Validate key
    local valid_key_data, key_err = fetch(KEY_URL)
    if not valid_key_data then
        return false, key_err
    end
    valid_key_data = valid_key_data:gsub("%s+$", "") -- trim spaces/newlines

    if key ~= valid_key_data then
        return false, "Invalid key"
    end

    -- Get merge list
    local merge_list_data, merge_err = fetch(MERGE_LIST_URL)
    if not merge_list_data then
        return false, merge_err
    end

    -- Search for matching merge
    local found_url
    for line in merge_list_data:gmatch("[^\r\n]+") do
        local id, url, compat = line:match("([^|]+)|([^|]+)|([^|]+)")
        if id == merge then
            found_url = url
            break
        end
    end

    if not found_url then
        return false, "Merge not found"
    end

    -- Fetch the actual script
    local script_data, script_err = fetch(found_url)
    if not script_data then
        return false, script_err
    end

    return true, script_data
end
