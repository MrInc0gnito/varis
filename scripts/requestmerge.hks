-- requestmerge.hks
local function fetch(url)
    local ok, result = pcall(function()
        return game:HttpGet(url)
    end)
    if not ok then
        return nil, "Failed to fetch URL: " .. tostring(result)
    end
    return result
end

local function trim(s)
    return s:match("^%s*(.-)%s*$")
end

local KEY_URL = "https://raw.githubusercontent.com/MrInc0gnito/varis/refs/heads/main/scripts/key.hsk"
local MERGE_LIST_URL = "https://raw.githubusercontent.com/MrInc0gnito/varis/refs/heads/main/scripts/requestsignal.hks"

return function(key, merge)
    -- Validate key
    local valid_key, err = fetch(KEY_URL)
    if not valid_key then
        return false, err
    end
    valid_key = trim(valid_key)

    if key ~= valid_key then
        return false, "Invalid key"
    end

    -- Fetch merge list
    local merge_list, err = fetch(MERGE_LIST_URL)
    if not merge_list then
        return false, err
    end

    -- Find merge URL for requested merge
    local found_url
    for line in merge_list:gmatch("[^\r\n]+") do
        local id, url, compat = line:match("([^|]+)|([^|]+)|([^|]+)")
        if id == merge then
            found_url = url
            break
        end
    end

    if not found_url then
        return false, "Merge not found"
    end

    -- Fetch merge script source
    local script_source, err = fetch(found_url)
    if not script_source then
        return false, err
    end

    return true, script_source
end
